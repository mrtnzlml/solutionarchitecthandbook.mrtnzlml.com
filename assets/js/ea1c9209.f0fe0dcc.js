"use strict";(self.webpackChunkuniversity=self.webpackChunkuniversity||[]).push([[9185],{7294:(e,n,s)=>{s.d(n,{Ay:()=>l,RM:()=>i});var o=s(4848),t=s(8453),a=s(7293);const i=[];function r(e){const n={a:"a",p:"p",...(0,t.R)(),...e.components};return(0,o.jsx)(a.A,{type:"info",icon:"\ud83d\udd12",title:"Paid feature",children:(0,o.jsxs)(n.p,{children:["This is a paid feature and requires involvement of Rossum Sales and/or Rossum Professional Services. Consider contacting the respective teams using the following form: ",(0,o.jsx)(n.a,{href:"https://rossum.ai/form/contact/",children:"https://rossum.ai/form/contact/"})]})})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},101:(e,n,s)=>{s.d(n,{Ay:()=>r,RM:()=>a});var o=s(4848),t=s(8453);const a=[];function i(e){const n={a:"a",admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,o.jsxs)(n.admonition,{title:"Work in progress",type:"warning",children:[(0,o.jsxs)(n.p,{children:["We're still working on this part and would love to hear your thoughts! Feel free to ",(0,o.jsx)(n.a,{href:"https://github.com/rossumai/university/discussions",children:"share your feedback"})," or ",(0,o.jsx)(n.a,{href:"https://github.com/rossumai/university/pulls",children:"submit a pull request"}),". Thank you! \ud83d\ude4f"]}),e.issue?(0,o.jsxs)(n.p,{children:["Tracking issue: ",(0,o.jsx)(n.a,{href:e.issue,children:e.issue})]}):""]})}function r(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},5129:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"learn/sandboxes/index","title":"Sandboxes","description":"Rossum Sandboxes allow for isolated development of the solution and easy deployments of the tested solution to production.","source":"@site/docs/learn/sandboxes/index.md","sourceDirName":"learn/sandboxes","slug":"/learn/sandboxes/","permalink":"/docs/learn/sandboxes/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Sandboxes","sidebar_position":1},"sidebar":"learnSidebar","previous":{"title":"Custom code handbook","permalink":"/docs/learn/rossum-formulas/custom-code-handbook"},"next":{"title":"Deployment patterns","permalink":"/docs/learn/sandboxes/deployment-patterns"}}');var t=s(4848),a=s(8453),i=s(1470),r=s(9365),l=s(7294);s(101);const d={title:"Sandboxes",sidebar_position:1},c=void 0,h={},u=[...l.RM,{value:"Installation",id:"installation",level:2},{value:"Available CLI commands",id:"available-cli-commands",level:2},{value:"Available configuration options",id:"available-configuration-options",level:2},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"Configuring <code>mapping.yaml</code> file (DEPRECATED)",id:"configuring-mappingyaml-file-deprecated",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.Ay,{}),"\n",(0,t.jsx)(n.p,{children:"Rossum Sandboxes allow for isolated development of the solution and easy deployments of the tested solution to production."}),"\n",(0,t.jsxs)(n.p,{children:["Using Sandboxes currently requires installation of an external tooling available at: ",(0,t.jsx)(n.a,{href:"https://github.com/rossumai/deployment-manager",children:"https://github.com/rossumai/deployment-manager"})]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(i.A,{groupId:"prd",children:[(0,t.jsxs)(r.A,{value:"prd2",label:"v2 (latest)",default:!0,children:[(0,t.jsxs)(n.p,{children:["First, download the installation script for our Sandboxing tool ",(0,t.jsx)(n.code,{children:"deployment-manager"})," from its Rossum GitHub repository:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/rossumai/deployment-manager/main/install.sh)"\n'})}),(0,t.jsxs)(n.p,{children:["The script will automatically run and install the Sandboxing tool in the ",(0,t.jsx)(n.code,{children:"~/.local/bin"})," folder making it available globally under the command ",(0,t.jsx)(n.code,{children:"prd2"}),"."]}),(0,t.jsx)(n.p,{children:"To upgrade to the latest version, run:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"prd2 update\n"})}),(0,t.jsxs)(n.p,{children:["You can find more information here: ",(0,t.jsx)(n.a,{href:"https://github.com/rossumai/deployment-manager",children:"https://github.com/rossumai/deployment-manager"})]}),(0,t.jsx)(n.p,{children:"Alternatively, you can install the tool manually (advanced):"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd $(mktemp -d)\ngit clone git@github.com:rossumai/deployment-manager.git\ncd deployment-manager\n\npython3 -m venv .\nsource bin/activate\npython3 -m pip install pipx\n\npython3 -m pipx install . --force\n"})}),(0,t.jsx)(n.admonition,{title:"Using Microsoft Windows?",type:"warning",children:(0,t.jsxs)(n.p,{children:["Sandboxes are currently not supported on Windows. You can, however, use WSL to run the ",(0,t.jsx)(n.code,{children:"prd2"})," command: ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/install",children:"https://learn.microsoft.com/en-us/windows/wsl/install"})]})})]}),(0,t.jsxs)(r.A,{value:"prd",label:"v1 (deprecated)",children:[(0,t.jsxs)(n.p,{children:["First, download the installation script for our Sandboxing tool ",(0,t.jsx)(n.code,{children:"deployment-manager"})," from its Rossum GitHub repository:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/rossumai/deployment-manager/main/install.sh)"\n'})}),(0,t.jsxs)(n.p,{children:["The script will automatically run and install the Sandboxing tool in the ",(0,t.jsx)(n.code,{children:"~/.local/bin"})," folder making it available globally under the command ",(0,t.jsx)(n.code,{children:"prd"}),"."]}),(0,t.jsx)(n.p,{children:"To upgrade to the latest version, run:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"prd update\n"})}),(0,t.jsxs)(n.p,{children:["You can find more information here: ",(0,t.jsx)(n.a,{href:"https://github.com/rossumai/deployment-manager",children:"https://github.com/rossumai/deployment-manager"})]}),(0,t.jsx)(n.admonition,{title:"Using Microsoft Windows?",type:"warning",children:(0,t.jsxs)(n.p,{children:["Sandboxes are currently not supported on Windows. You can, however, use WSL to run the ",(0,t.jsx)(n.code,{children:"prd"})," command: ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/install",children:"https://learn.microsoft.com/en-us/windows/wsl/install"})]})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"available-cli-commands",children:"Available CLI commands"}),"\n",(0,t.jsxs)(i.A,{groupId:"prd",children:[(0,t.jsxs)(r.A,{value:"prd2",label:"v2 (latest)",default:!0,children:[(0,t.jsxs)(n.p,{children:["Complete list of commands and their parameters can be found when running ",(0,t.jsx)(n.code,{children:"prd2 --help"}),":"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: prd2 [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --version  Show the version and exit.\n  --help     Show this message and exit.\n\nCommands:\n  deploy           Group of commands related to deploying from source to...\n  hook             Group of commands related to working with hooks\n  init             Creates a new project directory with the specified...\n  migrate-mapping  Updates the current mapping.yaml to conform with the...\n  pull             Downloads all Rossum objects from the user's default...\n  purge            Deletes all objects in Rossum based on IDs in the...\n  push             Updates local files that were changed into Rossum.\n  update           Updates the PRD command to the latest version.\n"})}),(0,t.jsxs)(n.p,{children:["For more information about each command, run ",(0,t.jsx)(n.code,{children:"prd2 <command> --help"})," (example for pull command):"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"Usage: prd2 pull [OPTIONS] [DESTINATIONS]...\n\n  Downloads all Rossum objects from the user's default (first) organization.\n  Creates a local organization directory structure with the configs of these\n  objects. In case the directory already exists, it first deletes its contents\n  and then downloads them anew.\n\nOptions:\n  -c, --commit                    Commits the pulled changes automatically.\n  -a, --all                       Downloads all remote files and overwrites\n                                  the local ones in the selected destinations.\n  -s, --skip-objects-without-subdir\n                                  If there are objects whose subdir cannot be\n                                  determined, user is not manually prompted -\n                                  objects are not downloaded.\n  -m, --message TEXT              Commit message for pulling.\n  --help                          Show this message and exit.\n"})})]}),(0,t.jsxs)(r.A,{value:"prd",label:"v1 (deprecated)",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"prd"})," is a CLI tool and offers the following main commands:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prd init"}),": Initialize a new project (creates mainly ",(0,t.jsx)(n.code,{children:"credentials.json"})," and ",(0,t.jsx)(n.code,{children:"prd_config.yaml"})," files). When called with a project name, it also initialized an empty Git repository."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prd pull"}),": Pulls all objects from both ",(0,t.jsx)(n.code,{children:"source"})," and ",(0,t.jsx)(n.code,{children:"target"})," organizations (as per your configuration). It is possible to explicitly specify ",(0,t.jsx)(n.code,{children:"source"}),"/",(0,t.jsx)(n.code,{children:"target"})," to pull only that one environment, for example: ",(0,t.jsx)(n.code,{children:"prd pull source"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prd push"}),": Pushes the latest changes to the ",(0,t.jsx)(n.code,{children:"source"})," organization. This is effectively a counterpart of the ",(0,t.jsx)(n.code,{children:"pull"})," command."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prd release"}),": Pushes the latest changes to the ",(0,t.jsx)(n.code,{children:"target"})," organization. Visit ",(0,t.jsx)(n.a,{href:"/docs/learn/sandboxes/deployment-patterns#two-environments-for-sandbox-and-production",children:"Deployment patterns"})," to learn more about this use-case."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prd purge"}),": Removes all objects in the target organization."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prd purge unused_schemas"}),": Removes old unused schemas."]}),"\n"]}),(0,t.jsxs)(n.p,{children:["Complete list of commands and their parameters can be found when running ",(0,t.jsx)(n.code,{children:"prd --help"}),"."]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"available-configuration-options",children:"Available configuration options"}),"\n",(0,t.jsxs)(i.A,{groupId:"prd",children:[(0,t.jsxs)(r.A,{value:"prd2",label:"v2 (latest)",default:!0,children:[(0,t.jsxs)(n.p,{children:["The only necessary configuration is in the ",(0,t.jsx)(n.code,{children:"example-org/credentials.yaml"})," and in the ",(0,t.jsx)(n.code,{children:"prd_config.yaml"})," files right after running ",(0,t.jsx)(n.code,{children:"prd2 init"}),". The ",(0,t.jsx)(n.code,{children:"init"})," command will guide you through the process so you don't have to worry about the configuration later (in fact, it is not advised to update this config manually; instead re-run the ",(0,t.jsx)(n.code,{children:"init"})," command)."]}),(0,t.jsx)(n.p,{children:"Here is how the credentials file looks like:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="example-org/credentials.yaml"',children:"token: b1946ac92492d2347c6235b4d2611184\n"})}),(0,t.jsxs)(n.p,{children:["And here is how the ",(0,t.jsx)(n.code,{children:"prd_config.yaml"})," file looks like (example):"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="prd_config.yaml"',children:"directories:\n  production-org:\n    org_id: '123123'\n    api_base: https://api.elis.rossum.ai/v1\n    subdirectories:\n      default:\n        regex: ''\n"})})]}),(0,t.jsxs)(r.A,{value:"prd",label:"v1 (deprecated)",children:[(0,t.jsxs)(n.p,{children:["The only necessary configuration is in the ",(0,t.jsx)(n.code,{children:"credentials.json"})," and in the ",(0,t.jsx)(n.code,{children:"prd_config.yaml"})," files right after running ",(0,t.jsx)(n.code,{children:"prd init"}),"."]}),(0,t.jsxs)(n.p,{children:["First, we will setup credentials in the ",(0,t.jsx)(n.code,{children:"credentials.json"})," file, where we can work with username and password combination (",(0,t.jsx)(n.a,{href:"#example-1",children:"Example 1"}),"), or alternatively we can use ",(0,t.jsx)(n.code,{children:"token"})," (",(0,t.jsx)(n.a,{href:"#example-2",children:"Example 2"}),")."]}),(0,t.jsx)(n.h4,{id:"example-1",children:"Example 1"}),(0,t.jsx)(n.p,{children:"Authentication using username and password."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="credentials.json"',children:'{\n  // Source organization (typically the only one needed).\n  "source": {\n    // Username under which `prd` will be calling the API.\n    "username": "...",\n\n    // Password for the user under which `prd` will be calling the API.\n    "password": "..."\n  },\n\n  // Target organization in case it is necessary to release into a different organization\n  // from source. The configuration is identical with `source` parameter.\n  "target": {\n    "username": "...",\n\n    "password": "..."\n  }\n}\n'})}),(0,t.jsx)(n.h4,{id:"example-2",children:"Example 2"}),(0,t.jsx)(n.p,{children:"Alternatively, you can use API token instead of username and password (if you have it):"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="credentials.json"',children:'{\n  "source": {\n    // highlight-start\n    "token": "..." // use API token instead of username/password\n    // highlight-end\n  },\n  "target": {\n    "token": "..."\n  }\n}\n'})}),(0,t.jsxs)(n.p,{children:["Finally, to set up the organization's URL, we need to edit the ",(0,t.jsx)(n.code,{children:"prd_config.yaml"})," file, where we specify the source API URL. If the target API URL is different from the source, we can also specify ",(0,t.jsx)(n.code,{children:"target_api_base"}),"."]}),(0,t.jsxs)(n.p,{children:["If the URLs are identical, you can add the ",(0,t.jsx)(n.code,{children:"use_same_org_as_target"})," parameter with the value ",(0,t.jsx)(n.code,{children:"true"}),". In this case, you can remove ",(0,t.jsx)(n.code,{children:"target_api_base"}),"."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="prd_config.yaml"',children:"# You can specify source and target API URL:\nsource_api_base: 'https://api.elis.rossum.ai/v1'\ntarget_api_base: 'https://api.elis.rossum.ai/v1'\n\n# Or add this to your YAML file in case the source and target are identical (and omit the target_api_base):\nuse_same_org_as_target: true\n"})})]})]}),"\n",(0,t.jsxs)(n.h2,{id:"configuring-mappingyaml-file-deprecated",children:["Configuring ",(0,t.jsx)(n.code,{children:"mapping.yaml"})," file (DEPRECATED)"]}),"\n",(0,t.jsxs)(n.admonition,{title:"DEPRECATED (for v1 only)",type:"danger",children:[(0,t.jsxs)(n.p,{children:["Note, this section describes how to configure the ",(0,t.jsx)(n.code,{children:"mapping.yaml"})," file which is only used in the deprecated v1 version of ",(0,t.jsx)(n.code,{children:"prd"}),". The latest version of ",(0,t.jsx)(n.code,{children:"prd2"})," does not use this file."]}),(0,t.jsxs)(n.p,{children:["Learn how to upgrade to the latest version here: ",(0,t.jsx)(n.a,{href:"/docs/learn/sandboxes/migrate-v1-to-v2",children:"Migration guide from v1 to v2"}),"."]})]}),"\n",(0,t.jsxs)(n.p,{children:["Note that this file is automatically generated by the ",(0,t.jsx)(n.code,{children:"prd pull"})," command. It is typically not necessary to configure it manually unless some more advanced use-case is needed."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# The main key describing `source` organization details:\nORGANIZATION:\n  # ID of the `source` organization:\n  id: 123456\n  # Name of the `source` organization:\n  name: MyOrganization (Sandbox)\n  targets:\n    # ID of the `target` organization (if any):\n    - target_id: 654321\n  WORKSPACES:\n    # IDs of the `source` workspaces:\n    - id: 123456\n      # Name of the `source` workspace:\n      name: 'My Test Workspace'\n      targets:\n        # ID(s) of the `target` workspace(s) (there can be none or more than one):\n        - target_id: null\n      QUEUES:\n        # IDs of the `source` queues belonging to the `source` workspace above:\n        - id: 123456\n          # Name of the `source` queue:\n          name: Invoices\n          targets:\n            # ID(s) of the `target` queue(s) (there can be none or more than one):\n            - target_id: null\n              # (optional) You could override attribute on the target using `attribute_override`\n              ## - for example you can have `name:` on `target` different from the `source`\n              attribute_override:\n                name: Invoices (PROD)\n          INBOX:\n            # IDs of the `source` inbox belonging to the `source` queue above:\n            id: 123456\n            # Name of the `source` inbox:\n            name: Invoices\n            targets:\n              # ID(s) of the `target` inbox(s) (there can be none or more than one):\n              - target_id: null\n  HOOKS:\n    # IDs of the `source` hooks:\n    - id: 123456\n      # Name of the `source` hook:\n      name: Supplier Data Matching\n      targets:\n        # ID(s) of the `target` hook(s) (there can be none or more than one):\n        - target_id: null\n  SCHEMAS:\n    # IDs of the `source` schemas:\n    - id: 123456\n      # Name of the `source` schema:\n      name: Tax invoices (US) schema\n      targets:\n        # ID(s) of the `target` schema(s) (there can be none or more than one):\n        - target_id: null\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);