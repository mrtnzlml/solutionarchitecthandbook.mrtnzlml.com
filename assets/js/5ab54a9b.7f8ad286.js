"use strict";(self.webpackChunkuniversity=self.webpackChunkuniversity||[]).push([[1842],{4740:(e,n,s)=>{s.d(n,{Ay:()=>r,RM:()=>a});var i=s(4848),t=s(8453);const a=[];function l(e){const n={a:"a",admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,i.jsx)(n.admonition,{title:"Deprecated",type:"danger",children:(0,i.jsxs)(n.p,{children:["This feature is deprecated. It won't receive any further updates and is likely to be completely removed in the future. Please consider using other available alternatives or contacting ",(0,i.jsx)(n.a,{href:"mailto:support@rossum.ai",children:"support@rossum.ai"})," for further assistance."]})})}function r(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8605:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"learn/deprecated/business-rules-validation/expression-engine","title":"Business Rules Validation: Expression Engine","description":"Rossum Expression Engine is responsible for validating expressions, producing either a true or false result. Its syntax closely resembles that of Python and allows for utilizing data from annotated documents. The engine assesses conditions and expressions using document data. Currently, it is employed for the Business Rules Validation extension, but there are plans to extend its usage to other extensions in the future. Engine operates at both the header field and line item levels, offering the flexibility to combine them within a single expression.","source":"@site/docs/learn/deprecated/business-rules-validation/expression-engine.md","sourceDirName":"learn/deprecated/business-rules-validation","slug":"/learn/business-rules-validation/expression-engine","permalink":"/docs/learn/business-rules-validation/expression-engine","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Business Rules Validation: Expression Engine","sidebar_label":"Expression Engine","toc_max_heading_level":4,"slug":"/learn/business-rules-validation/expression-engine"},"sidebar":"learnSidebar","previous":{"title":"Configuration examples","permalink":"/docs/learn/business-rules-validation/configuration-examples"},"next":{"title":"Find & Replace Values","permalink":"/docs/learn/find-replace-values"}}');var t=s(4848),a=s(8453),l=s(4740);const r={sidebar_position:2,title:"Business Rules Validation: Expression Engine",sidebar_label:"Expression Engine",toc_max_heading_level:4,slug:"/learn/business-rules-validation/expression-engine"},o="Expression Engine",d={},c=[...l.RM,{value:"Allowed operators",id:"allowed-operators",level:2},{value:"Data types",id:"data-types",level:2},{value:"Empty values",id:"empty-values",level:2},{value:"Aggregation function and empty values",id:"aggregation-function-and-empty-values",level:2},{value:"Allowed functions",id:"allowed-functions",level:2},{value:"Aggregation functions",id:"aggregation-functions",level:3},{value:"Filter function",id:"filter-function",level:3},{value:"Default value functions",id:"default-value-functions",level:3},{value:"Date functions",id:"date-functions",level:3},{value:"List function",id:"list-function",level:3},{value:"String functions",id:"string-functions",level:3},{value:"<code>substring</code>",id:"substring",level:4},{value:"<code>regexp</code>",id:"regexp",level:4},{value:"<code>similarity</code>",id:"similarity",level:4},{value:"Table scope",id:"table-scope",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.Ay,{}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"expression-engine",children:"Expression Engine"})}),"\n",(0,t.jsx)(n.p,{children:"Rossum Expression Engine is responsible for validating expressions, producing either a true or false result. Its syntax closely resembles that of Python and allows for utilizing data from annotated documents. The engine assesses conditions and expressions using document data. Currently, it is employed for the Business Rules Validation extension, but there are plans to extend its usage to other extensions in the future. Engine operates at both the header field and line item levels, offering the flexibility to combine them within a single expression."}),"\n",(0,t.jsx)(n.p,{children:"Examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'{issue_date} > "2023-01-01"\n\n{item_price} * {item_amount} == {item_total}\n\nsum({item_total}) == {total_price}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"allowed-operators",children:"Allowed operators"}),"\n",(0,t.jsx)(n.p,{children:"Engine supports basic mathematical and logical operators:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"+, -, /, //, *, %, and, or, xor, ==, !=, <, >, <=, >=\n"})}),"\n",(0,t.jsx)(n.h2,{id:"data-types",children:"Data types"}),"\n",(0,t.jsx)(n.p,{children:"The Expression Engine supports four data types: integer (int), floating-point number (float), string, and date. When performing automatic casting, the engine first attempts to cast the value as a float, followed by an integer, then a date, and finally as a string."}),"\n",(0,t.jsxs)(n.p,{children:["It is important to note that when dealing with dates, the format ",(0,t.jsx)(n.code,{children:"YYYY-MM-DD"})," must be followed, including the quotation marks. Without the quotation marks, a value like 2023-12-24 would be evaluated as a mathematical subtraction resulting in the number 1987."]}),"\n",(0,t.jsx)(n.p,{children:"If you need to ensure a specific data type is used, you can manually cast the value using the following conversions. For whole numbers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"int(<value>)\n"})}),"\n",(0,t.jsx)(n.p,{children:"For numbers with decimal digits:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"float(<value>)\n"})}),"\n",(0,t.jsx)(n.p,{children:"For dates:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"date(<value>)\n"})}),"\n",(0,t.jsx)(n.p,{children:"For text (this also serves as a catch-all type):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"str(<value>)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"empty-values",children:"Empty values"}),"\n",(0,t.jsxs)(n.p,{children:["There are two functions to check whether a document data point has a value or is empty. The first one returns ",(0,t.jsx)(n.code,{children:"true"})," if the data point is not empty (",(0,t.jsx)(n.code,{children:"!=''"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"has_value({data_point})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The second one returns ",(0,t.jsx)(n.code,{children:"true"})," if the data point is empty (",(0,t.jsx)(n.code,{children:"==''"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"is_empty({empty_point})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Important Note: Please be aware that using ",(0,t.jsx)(n.code,{children:"==''"})," and ",(0,t.jsx)(n.code,{children:"!=''"})," for comparison will not work."]}),"\n",(0,t.jsxs)(n.p,{children:["The expression engine automatically avoids error messages during the annotation process by skipping all lines in a table that have empty values. Whenever there's an empty value in the rule, it is skipped, including ",(0,t.jsx)(n.code,{children:"==''"}),"."]}),"\n",(0,t.jsx)(n.p,{children:'For headers, the skip procedure works accordingly - because there\'s only "one" line to skip, the whole rule is skipped.'}),"\n",(0,t.jsx)(n.h2,{id:"aggregation-function-and-empty-values",children:"Aggregation function and empty values"}),"\n",(0,t.jsxs)(n.p,{children:["Table column with following values ",(0,t.jsx)(n.code,{children:'[1,2,"",2]'}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'sum({item_amount})==5\nsum({item_amount, default=0})==5\nunique_len({item_amount})==2\nlen({item_amount})==3\nlen(filter(({item_amount}),""))==3\nlen({item_amount, default=0})==4\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Table column with empty values ",(0,t.jsx)(n.code,{children:'["","",""]'}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'sum({item_amount})==None\nunique_len({item_amount})==None\nlen({item_amount})==None\nlen(filter(({item_amount}),""))==None\nlen({item_amount, default=0})==3\n'})}),"\n",(0,t.jsx)(n.p,{children:"Not annotated table (defined in schema):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'sum({item_amount})==None\nsum({item_amount, default=0})==None\nunique_len({item_amount})==None\nlen({item_amount})==None\nlen(filter(({item_amount}),""))==None\nlen({item_amount, default=0})==None\n'})}),"\n",(0,t.jsx)(n.h2,{id:"allowed-functions",children:"Allowed functions"}),"\n",(0,t.jsx)(n.h3,{id:"aggregation-functions",children:"Aggregation functions"}),"\n",(0,t.jsx)(n.p,{children:"To compare header fields and line items or implement business rules based on line items, the following aggregation functions are at your disposal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'all(<expression>) - all lines in the table must satisfy the business rule in order to pass\n\nany(<expression>) - at least one line in the table must fulfill the business rule in order to pass\n\nsum(<column>) - summary of a table column (applicable to float and int, as well as string values that can be cast to float or int)\n\nmin(<column>) - minimum value in a table column\n\nmax(<column>) - maximum value in a table column\n\nlen(<column>) - number of rows in the table (i.e., the length of the row list)\n\nunique_len(<column>) - number of unique values in a table column\n\nfirst_value(<column>) - first value of a table column, often used in conjunction with a filter to exclude empty values first_value(filter(<column>,["",None]))\n'})}),"\n",(0,t.jsx)(n.h3,{id:"filter-function",children:"Filter function"}),"\n",(0,t.jsx)(n.p,{children:"A filter function that removes all values in the second parameter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"filter(<value or column>[, <remove_value>])\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"filter({item_price}, [0,None])\n"})}),"\n",(0,t.jsx)(n.h3,{id:"default-value-functions",children:"Default value functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"{<value or column>, default=<default_value>} - basic default value function. Value extracted from the document cannot be used as a default value using this syntax.\n\n{<value or column>, default=value(\u2018<other_data_point>\u2019)} - with this setup you can use a data point as a default value.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Example: ",(0,t.jsx)(n.code,{children:'{vendor, default="Rossum"}'})," or ",(0,t.jsx)(n.code,{children:"value({item_delivery_date}, default={delivery_date})"})]}),"\n",(0,t.jsx)(n.h3,{id:"date-functions",children:"Date functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"today() - today\u2019s date, determined using Coordinated Universal Time (UTC), which is the standard time used in all Rossum solutions\n\ntimedelta(<shift>) - adds a time delta in years, months and days.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Example: ",(0,t.jsx)(n.code,{children:"today() + timedelta(days=2) > {due_date}"})]}),"\n",(0,t.jsx)(n.h3,{id:"list-function",children:"List function"}),"\n",(0,t.jsxs)(n.p,{children:["The following function returns ",(0,t.jsx)(n.code,{children:"true"})," if the search element is found in the document value which is a table column."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"list_contains(<value>, <search>)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'list_contains({item_description}, "car")\n'})}),"\n",(0,t.jsx)(n.p,{children:"The function supports a list of values to be checked:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"list_contains(<value>, [<search>])\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'list_contains({item_description}, ["car", "bus"]))\n'})}),"\n",(0,t.jsx)(n.p,{children:"Keep in mind that:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"contains"})," cannot be used for substring, please use regexp."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"in"})," is not supported."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"string-functions",children:"String functions"}),"\n",(0,t.jsx)(n.h4,{id:"substring",children:(0,t.jsx)(n.code,{children:"substring"})}),"\n",(0,t.jsxs)(n.p,{children:["Returns ",(0,t.jsx)(n.code,{children:"true"}),' if the "search" substring is found in "value". This function is case sensitive.']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"substring(<search>, <value>)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"regexp",children:(0,t.jsx)(n.code,{children:"regexp"})}),"\n",(0,t.jsxs)(n.p,{children:["Returns ",(0,t.jsx)(n.code,{children:"true"})," if the regular expression has a non-empty match to the document value."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"regexp(<regexp>, <value>)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'regexp("[Cc]ar$", {item_description})\n'})}),"\n",(0,t.jsx)(n.p,{children:"Optional parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ignore_case"}),": ",(0,t.jsx)(n.code,{children:'regexp("rossum", {sender_name}, ignore_case=True)'})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Please note that ",(0,t.jsx)(n.code,{children:"re.search"})," is the underline function call and both parameters are cast to string."]}),"\n",(0,t.jsx)(n.h4,{id:"similarity",children:(0,t.jsx)(n.code,{children:"similarity"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the Levenshtein distance between the document value and the selected string."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"similarity(<value>,<search>)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'similarity({item_description},"Car") > 2\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Please find more information about Levenshtein distance here: ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Levenshtein_distance",children:"https://en.wikipedia.org/wiki/Levenshtein_distance"})]}),"\n",(0,t.jsx)(n.h3,{id:"table-scope",children:"Table scope"}),"\n",(0,t.jsx)(n.p,{children:"There is a limitation in the implementation where one rule can only work with one table. This limitation ensures that error messages can be shown on the correct lines of the table."}),"\n",(0,t.jsx)(n.p,{children:"To perform tasks like checking the number of lines in the tables, you can use aggregation functions. However, the expression engine does not permit using data points in one rule. Instead, you need to define variables to work with the data points."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "variables": {\n    "len_first_table": ""\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var i=s(6540);const t={},a=i.createContext(t);function l(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);